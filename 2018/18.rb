input = <<EOS
........#.##..#|#|.#.....|......#..#.|..##..||.#..
#|##.|||.|..|||......|.##.#|#|....||#.#...#...#..#
..##...#|#..|#.|..#||#...|#....|#...#|#.|.||...|..
.....#|||.|.#...###|....|#..#.#.#.|..#||#|....|#.|
....|.....#.||.#..#...#|....|||..#....##...|..|.#|
||...|###..|..|||..|#.##|.####.#...|.||.|....|.##.
..#.#.###..||......#|#|.|....#|.#|.|...#....#...#|
.|..||||||...#.##..|.#||.#|##|..#.#..##..#...|#...
.|.....||...#.#|.##|..|.##||..#.#..|..#.#.#..|.#|.
||...|#........#.|..##|.|..#...#...#|#|..||.|....#
#||.|.|..|.......##....|..#||#.#|.|||......|..||..
.....#.|||.....|.#.#.......#.|..#.|.....|.|.#...#.
...#.##.#.||#.#|.#.##..#.||#.#.#|#.||.||.|......#.
|.|...#|.|####|.|..#.#|....|......|....|...||#||..
.#...#.#......|...#.....|.....|.#|...##|||...#.|#.
||##.#...#.|...##..##.||#...#|...|##.##...#||..#|.
|.|#.||..|##.|.#.|..#..|.##.#.......#...|....||...
.|.......#..##...|.|..|#.#....|#|..##|#|.##|.|.|#.
.|....|.#|||#.#..#..|||.....||...#|.#..|..#.#...#.
...#..###.#|.##||.#.|.||###..|..|#.|#..||......||.
..##.......##|.....#...|#|..##|.#.|||.|#....|##...
#...#|##|......##|...|#..#.|..##..#..#.|##.##|#..#
|.#|.....|..#...|....|...#....#|..#.....||...|#|.|
##...#.....#.....|#|.......|....####.#..##.|.##...
.....|...|#|#..|#|.|..##.|..|....##..||.#...|..|.|
.|..|....##.||||.##|.#...|..|#|.#.|####.|..|##.#..
#.........|##.#|..##|...|........|..|....|..#...##
.#.|...#...#...|.|...|..|.#.|....#..|.|..|..#|....
.....#.....#|.#....|....##...##....###....#.|...|.
||.....|.|.##|.##||.#|#.##|.#..|#####|...|...||#.#
...#||....#.....##.|##|.##|#.##.#|.|.....#........
..##.....||..#..#.|..##...#.|.|.|.|...|.#.|..|....
|##..|..........##..#|...|......||.#....#....|..#.
...#..|.#.|...|.##|.##..##..|.|....#||#|##..||||..
#...##......|..|#...#.#.|#||..#...|.#...|..###.||.
|#.......|#.|##|....|.....#..||.|#|#...#|....|..#|
.|.....#|##.|.#...#..#||#.....|....#||.#|.##.##.#|
|#..###..#..|#.....##...||.|.|.#.#|.||..||.||#|#..
||||#....|#..|.|...|...||....|...#....#.##...#|...
...||##||#......|#.#..#..|.....|...#..#|...#...|||
.|#.|.|....|...#.....|#....|..#.#...#...||..##|..|
||#.|##.|...|.##......##|#..#..#.#.#.....|#|##.##.
|.#.....||.....#.#...|...|..|#|..|..#...|....|...|
###..#.#......#|..#....#......|##.##....|||.|..#|.
..#.|.#...#..|#####|.....##.|.|#......|..||.#|....
.#||.|.##..#.|..##......|..|.|#..|.....#.....|#|..
|##.#......#.#.#.#|||#|....#...#.|.........|||.#..
|......||.|..#.|#||...||.#.#.##..#..#.#....#.#..#|
#.|..##.....#..|...|#...#...|.......|.|..|#|......
##...#....#..#..#....|...#|#.||.|...|.#..###|##|.|
EOS

grid = {}

input.lines.each_with_index do |line, y|
  line.chomp!

  line.chars.each_with_index do |cell, x|
    grid[[x, y]] = cell
  end
end

cycle = 445.times.map do
  res = grid.values.count("|") * grid.values.count("#")

  new_grid = grid.dup

  new_grid.each do |pos, cell|
    x, y = pos

    adjacent = []
    (-1..1).each do |dx|
      (-1..1).each do |dy|
        adjacent << grid[[x + dx, y + dy]] unless dx == 0 && dy == 0
      end
    end
    adjacent.compact!

    case grid[[x, y]]
    when "."
      new_grid[[x, y]] = "|" if adjacent.count("|") >= 3
    when "|"
      new_grid[[x, y]] = "#" if adjacent.count("#") >= 3
    when "#"
      new_grid[[x, y]] = "." unless adjacent.count("#") >= 1 && adjacent.count("|") >= 1
    else
      raise
    end
  end

  grid = new_grid

  res
end

n = 1_000_000_000
p cycle[417 + ((n - 417) % (445 - 417))]
